// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace BookFast.Booking.Client.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class BookingRepresentation
    {
        /// <summary>
        /// Initializes a new instance of the BookingRepresentation class.
        /// </summary>
        public BookingRepresentation()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the BookingRepresentation class.
        /// </summary>
        public BookingRepresentation(System.Guid? id = default(System.Guid?), int? accommodationId = default(int?), string accommodationName = default(string), int? facilityId = default(int?), string facilityName = default(string), string streetAddress = default(string), System.DateTime? fromDate = default(System.DateTime?), System.DateTime? toDate = default(System.DateTime?))
        {
            Id = id;
            AccommodationId = accommodationId;
            AccommodationName = accommodationName;
            FacilityId = facilityId;
            FacilityName = facilityName;
            StreetAddress = streetAddress;
            FromDate = fromDate;
            ToDate = toDate;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public System.Guid? Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "accommodationId")]
        public int? AccommodationId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "accommodationName")]
        public string AccommodationName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "facilityId")]
        public int? FacilityId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "facilityName")]
        public string FacilityName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "streetAddress")]
        public string StreetAddress { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "fromDate")]
        public System.DateTime? FromDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "toDate")]
        public System.DateTime? ToDate { get; set; }

    }
}
